#!/usr/bin/env node

/**
 * Module dependencies
 */

var _ = require('lodash');
var program = require('./_commander');
var package = require('../package.json');

program
  .version(package.version, '-v, --version');
//
// Normalize version argument, i.e.
//
// $ we -v
// $ we -V
// $ we --version
// $ we version
//
// make `-v` option case-insensitive
process.argv = _.map(process.argv, function(arg) {
  return (arg === '-V') ? '-v' : arg;
});
// $ we version (--version synonym)
program
  .command('version')
  .description('Show we.js cli version')
  .action(program.versionInformation);

// check project status
program
  .command('status')
  .description('Get project status')
  .action(require('./status'));

// run REPL console
program
  .command('console')
  .description('Bootstrap we.js and start node.js console. see: https://nodejs.org/api/repl.html')
  .action(require('./console'));

program
  .command('createUser [new?]')
  .description('Create a new user in current project')
  .action(require('./create-user'));

program
  .command('setUserAsAdmin [id]')
  .description('Set one user as admin with user id')
  .action(require('./set-user-as-admin'));

program
  .command('resetDB')
  .description('Delete and recreate all tables')
  .action(require('./reset-database.js'));

program
  .command('uli [id]')
  .description('Get one time login url')
  .action(require('./uli.js'));

program
  .command('update')
  .description('Run plugin update functions in current project')
  .action(require('./update.js'));

program
  .command('routes')
  .description('List all routes in current project')
  .action(require('./routes.js'));

program
  .command('loadLocales')
  .description('Load locales from plugins, merge in project and sort locale strings')
  .action(require('./loadLocales.js'));

program
  .command('cron')
  .description('Run project and plugin cron tasks')
  .action(require('./cron.js'));

// Don't balk at unknown options
program.unknownOption = function() {
  console.error('Command not found: ', program.args[0]);
  console.error('Use "we" command to show all avaible commands');
};

// 404
program
  .command('*')
  .action(program.unknownOption);

program.parse(process.argv);

var NO_COMMAND_SPECIFIED = program.args.length === 0;
if (NO_COMMAND_SPECIFIED) {
  program.usageMinusWildcard();
}